# Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов, взятых из трёх списков
# (по одному из каждого):
# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
# Например:
# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]
# Документировать код функции.
# Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы слов в шутках (когда каждое слово
# можно использовать только в одной шутке)? Сможете ли вы сделать аргументы именованными?

# импортируем функцию random из модуля randint
from random import randint


def get_jokes(nouns_len: int, revers: bool = True) -> list:
    """Функция возвращает n шуток из трёх случайных слов"""
    # Создадим списки слов
    nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
    adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
    adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

    # если n больше длины списка и нельзя использовать слова повторно, то ограничим n
    if not revers and nouns_len > len(nouns):
        nouns_len = len(nouns)

    jokes_list = []
    # Получаем рандомные элементы списков
    for i in range(nouns_len):
        # если можно использовать слова повторно
        if revers:
            jok1 = nouns[randint(0, len(nouns) - 1)]
            jok2 = adverbs[randint(0, len(adverbs) - 1)]
            jok3 = adjectives[randint(0, len(adjectives) - 1)]
        # если нельзя использовать слова повторно
        else:
            jok1 = nouns.pop(randint(0, len(nouns) - 1))
            jok2 = adverbs.pop(randint(0, len(adverbs) - 1))
            jok3 = adjectives.pop(randint(0, len(adjectives) - 1))
        # Собираем шутки
        jokes_list.append(f"{jok3} {jok1} {jok2}")
    return jokes_list


# Выводим шутки 2 раза с возможностью повтора слов и без
print(get_jokes(6))
print(get_jokes(10000000, revers=False))
